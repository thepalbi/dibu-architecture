//
// This file was generated by microprogammer.py - DO NOT EDIT MANUALLY
//

`define micro_addr_size     5
`define signals_size    14
// +1 for the decision state bit
`define store_word_size 20


// Enable the IR register to be written
`define s_ir_w_en        0

// Enable the PC to be written in the next cycle
`define s_pc_w_en        1

// Enable the MAR (memory address register) to be written in the next clock cycle.
`define s_mar_w_en        2

// Enable the register file to be written in the next clock cycle.
`define s_reg_rw        3

// Enable ALU out into data bus
`define s_alu_out_en        4

// Enable flags register into data bus
`define s_flags_en        5

// Enable immediate decoded from IR into data bus
`define s_imm_en        6

// Enable write to the DAR register
`define s_dar_w_en        7

// Enable write to the MDR register
`define s_mdr_w_en        8

// Enable write to the data memory
`define s_dmem_w_en        9

// Enable MDR into data bus
`define s_mdr_out_en        10

// If selected, register bank out A is selected as MDR in
`define s_reg_to_mdr        11

// Enable the flags register to be written in the next clock cycle.
`define s_flags_w_en        12

// Enable a jump to be taken, and the PC data in to be the jump immediate
`define s_jump_ok        13
